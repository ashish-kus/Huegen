# Enhanced .clang-format for Large C++ Projects
# Optimized for readability, consistency, and maintainability
# Not proud but written with help of claude.ai

Language: Cpp
BasedOnStyle: LLVM

# Basic formatting
IndentWidth: 4
TabWidth: 4
UseTab: Never
ColumnLimit: 100

# Access modifiers
AccessModifierOffset: -2
IndentAccessModifiers: false

# Alignment for better readability
AlignConsecutiveAssignments: Consecutive
AlignConsecutiveDeclarations: Consecutive
AlignConsecutiveMacros: Consecutive
AlignConsecutiveBitFields: Consecutive
AlignEscapedNewlines: Left
AlignOperands: Align
AlignTrailingComments: true

# Function and class formatting
AllowShortFunctionsOnASingleLine: Inline
AllowShortIfStatementsOnASingleLine: Never
AllowShortLoopsOnASingleLine: false
AllowShortCaseLabelsOnASingleLine: false
AllowShortBlocksOnASingleLine: Empty
AllowShortLambdasOnASingleLine: Inline

# Braces - consistent K&R style for large projects
BreakBeforeBraces: Attach
BraceWrapping:
  AfterCaseLabel: false
  AfterClass: false
  AfterControlStatement: Never
  AfterEnum: false
  AfterFunction: false
  AfterNamespace: false
  AfterStruct: false
  AfterUnion: false
  AfterExternBlock: false
  BeforeCatch: false
  BeforeElse: false
  BeforeLambdaBody: false
  BeforeWhile: false
  SplitEmptyFunction: true
  SplitEmptyRecord: true
  SplitEmptyNamespace: true

# Line breaking
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: Yes
BreakBeforeBinaryOperators: NonAssignment
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeColon
BreakInheritanceList: BeforeColon
BreakStringLiterals: true

# Constructor and inheritance formatting
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
ConstructorInitializerAllOnOneLineOrOnePerLine: true

# Indentation
IndentCaseLabels: true
IndentCaseBlocks: false
IndentGotoLabels: true
IndentPPDirectives: None
IndentExternBlock: AfterExternBlock
IndentRequires: true
IndentWrappedFunctionNames: false

# Pointer and reference alignment
PointerAlignment: Left
ReferenceAlignment: Left
DerivePointerAlignment: false

# Spacing for readability
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true
SpaceBeforeAssignmentOperators: true
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 2
SpacesInAngles: Never
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: true
SpacesInParentheses: false
SpacesInSquareBrackets: false

# Modern C++ features
Cpp11BracedListStyle: true
CompactNamespaces: false
FixNamespaceComments: true
NamespaceIndentation: None
ShortNamespaceLines: 1

# Function parameters and arguments
AllowAllParametersOfDeclarationOnNextLine: true
AllowAllArgumentsOnNextLine: true
BinPackArguments: false
BinPackParameters: false
ExperimentalAutoDetectBinPacking: false

# Method chaining and fluent interfaces
BreakBeforeBinaryOperators: None
AlignAfterOpenBracket: Align
AllowAllConstructorInitializersOnNextLine: false

# Penalties for better formatting decisions
PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 1
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakString: 1000
PenaltyBreakTemplateDeclaration: 10
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 60
PenaltyIndentedWhitespace: 0

# Include sorting for large projects
SortIncludes: CaseSensitive
SortUsingDeclarations: true
IncludeBlocks: Regroup
IncludeCategories:
  - Regex: '^<ext/.*\.h>'
    Priority: 2
    SortPriority: 0
  - Regex: '^<.*\.h>'
    Priority: 1
    SortPriority: 0
  - Regex: '^<.*'
    Priority: 2
    SortPriority: 0
  - Regex: '.*'
    Priority: 3
    SortPriority: 0
IncludeIsMainRegex: '([-_](test|unittest))?$'
IncludeIsMainSourceRegex: ''

# Comments and documentation
ReflowComments: true
CommentPragmas: '^ IWYU pragma:'

# Miscellaneous
KeepEmptyLinesAtTheStartOfBlocks: false
MaxEmptyLinesToKeep: 1
SeparateDefinitionBlocks: Leave
InsertTrailingCommas: None
JavaScriptQuotes: Leave
JavaScriptWrapImports: true

# Macros (add your project-specific macros here)
MacroBlockBegin: ''
MacroBlockEnd: ''
ForEachMacros:
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH
StatementMacros:
  - Q_UNUSED
  - QT_REQUIRE_VERSION
